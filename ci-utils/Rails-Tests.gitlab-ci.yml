services:
  - postgres:9.6
variables:
  DB: postgres
  POSTGRES_DB: center
  POSTGRES_HOST: postgres
  POSTGRES_USER: runner
  RAILS_ENV: test

Test rails:
  image: mapotempo/nginx-passenger:2.0.1
  stage: test
  cache:
    key: ${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}-passenger
    paths:
      - vendor/bundle
      - node_modules
  script:
    - apt update > /dev/null && apt install -y curl git apt-transport-https build-essential zlib1g-dev libicu-dev g++ libgeos-dev libgeos++-dev libpq-dev zlib1g libicu57 libgeos-3.5.1 libpq5 postgresql-client > /dev/null
    - curl -sL https://deb.nodesource.com/setup_8.x | bash -
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    - echo "deb http://dl.yarnpkg.com/debian/ stable main" > /etc/apt/sources.list.d/yarn.list
    - apt update > /dev/null && apt install -y --no-install-recommends nodejs yarn > /dev/null
    - node --version
    - yarn check --path node_modules || yarn install --path node_modules
    - bundle check --path vendor/bundle --without development || bundle install --without development -j $(nproc) --path vendor/bundle
    - mkdir ../watch
    - bundle exec rake db:setup
    - bundle exec rake db:migrate
  only:
    - beta
    - prod
    - master
    - dev

Ruby 2.3:
  image: ruby:2.3
  stage: test
  cache:
    key: ${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}-2.3
    paths:
      - vendor/bundle
      - node_modules
  script:
    - apt update > /dev/null && apt install -y git apt-transport-https build-essential zlib1g-dev libicu-dev g++ libgeos-dev libgeos++-dev libpq-dev zlib1g libicu57 libgeos-3.5.1 libpq5 postgresql-client > /dev/null
    - curl -sL https://deb.nodesource.com/setup_8.x | bash -
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    - echo "deb http://dl.yarnpkg.com/debian/ stable main" > /etc/apt/sources.list.d/yarn.list
    - apt update > /dev/null && apt install -y --no-install-recommends nodejs yarn > /dev/null
    - yarn check --path node_modules || yarn install --path node_modules
    - bundle check --path vendor/bundle --without development || bundle install --without development -j $(nproc) --path vendor/bundle
    - mkdir ../watch
    - bundle exec rake db:setup
    - bundle exec rake db:migrate
    - bundle exec rake test COV=false BRAKEMAN=false
  only:
    - dev
    - master

Ruby 2.4:
  image: ruby:2.4
  stage: test
  cache:
    key: ${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}-2.4
    paths:
      - vendor/bundle
      - node_modules
  script:
    - apt update > /dev/null && apt install -y git apt-transport-https build-essential zlib1g-dev libicu-dev g++ libgeos-dev libgeos++-dev libpq-dev zlib1g libicu57 libgeos-3.5.1 libpq5 postgresql-client > /dev/null
    - curl -sL https://deb.nodesource.com/setup_8.x | bash -
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    - echo "deb http://dl.yarnpkg.com/debian/ stable main" > /etc/apt/sources.list.d/yarn.list
    - apt update > /dev/null && apt install -y --no-install-recommends nodejs yarn > /dev/null
    - yarn check --path node_modules || yarn install --path node_modules
    - bundle check --path vendor/bundle --without development || bundle install --without development -j $(nproc) --path vendor/bundle
    - mkdir ../watch
    - bundle exec rake db:setup
    - bundle exec rake db:migrate
    - bundle exec rake test COV=false BRAKEMAN=false
  only:
    - dev
    - master

Ruby 2.5:
  image: ruby:2.5
  allow_failure: true
  stage: test
  cache:
    key: ${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}-2.5
    paths:
      - vendor/bundle
      - node_modules
  script:
    - apt update > /dev/null && apt install -y git apt-transport-https build-essential zlib1g-dev libicu-dev g++ libgeos-dev libgeos++-dev libpq-dev zlib1g libicu57 libgeos-3.5.1 libpq5 postgresql-client > /dev/null
    - curl -sL https://deb.nodesource.com/setup_8.x | bash -
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    - echo "deb http://dl.yarnpkg.com/debian/ stable main" > /etc/apt/sources.list.d/yarn.list
    - apt update > /dev/null && apt install -y --no-install-recommends nodejs yarn > /dev/null
    - yarn check --path node_modules || yarn install --path node_modules
    - bundle check --path vendor/bundle --without development || bundle install --without development -j $(nproc) --path vendor/bundle
    - mkdir ../watch
    - bundle exec rake db:setup
    - bundle exec rake db:migrate
    - bundle exec rake test COV=false BRAKEMAN=false
  only:
    - dev
    - master
